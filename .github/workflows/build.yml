name: Build All Docker

on:
  schedule:
    - cron: "15 10 * * *"
  push:
    branches: [master]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: [master]

jobs:
  build-php:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ 7.2, 7.3, 7.4, 8 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: chmod +x blank.sh
      - name: Log into docker
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - run: sed 's/\(PHP_VERSION=\).*/\1${{ matrix.php }}/g' .env.example > .env
      - name: Build Image && Push
        run: eval $(sed -e '/^#/d' -e 's/^/export /' -e 's/$/;/' .env) ;docker buildx bake php --set *.platform=linux/amd64,linux/arm64,linux/386,linux/arm/v7,linux/arm/v6 --push
  build-other:
    runs-on: ubuntu-latest
    needs: build-php
    strategy:
      matrix:
        name: [ 'node', 'nginx', 'mysql', 'redis']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: chmod +x blank.sh
      - name: Log into docker
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        run: ./blank.sh d build ${{ matrix.name }}
      - name: Push image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker-compose push ${{ matrix.name }}
